
{{>header}}
 {{>sidebar}}
        <div class="page-wrapper">
            <div class="content">
                <div class="row">
                    <div class="col-sm-4 col-3">
                        <h4 class="page-title">Patients</h4>
                    </div>
                    <div class="col-sm-8 col-9 text-right m-b-20">
                        <a href="add-patient" class="btn btn btn-primary btn-rounded float-right"><i class="fa fa-plus"></i> Add Patient</a>
                    </div>
                </div>
				<div class="row">
					<div class="col-md-12">
						<div class="table-responsive">
							<table class="table table-border table-striped custom-table datatable mb-0">
								<thead>
									<tr>
										<th>Name</th>
										<th>DocId</th>
										{{!-- <th>Age</th> --}}
										<th>Phone</th>
										<th>Email</th>
                                        <th>Profile</th>
										<th class="text-right">Action</th>
									</tr>
								</thead>
								<tbody>
									   {{#each userData}}
									<tr>
										<td><img width="28" height="28" src="img/user.jpg" class="rounded-circle m-r-5" alt="">{{this.patientFullName}}</td>
										<td>{{this.DocId}}</td>
										{{!-- <td>{{this.age}}</td> --}}
										<td>{{this.phone}}</td>
										<td>{{this.email}}</td>
                                        <td><a class="dropdown-item" href="./patients-profile/{{this._id}}" data-toggle="modal"><i class="fa fa-eye-o m-r-5"></i>profile</a></td>
										<td class="text-right">
											<div class="dropdown dropdown-action">
												<a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
												<div class="dropdown-menu dropdown-menu-right">
													<a class="dropdown-item" href="./edit-patient/{{this._id}}"><i class="fa fa-pencil m-r-5"></i> Edit</a>
													<a class="dropdown-item" href="/delete-patient/{{this._id}}" data-toggle="modal"><i class="fa fa-trash-o m-r-5"></i> Delete</a>
                                                     {{!-- <a class="dropdown-item" href="./patients-profile/{{this._id}}" data-toggle="modal"><i class="fa fa-eye-o m-r-5"></i>profile</a> --}}
												</div>
											</div>
										</td>
									</tr> 
									   {{/each}}
								
									
					
								</tbody>
							</table>
						</div>
					</div>
                </div>
                <br><br>

                <div class="row">
					<div class="col-12">
						<div class="card">
							<div class="card-body">
								<div class="chart-title">
									<h4>Patients</h4>
								</div>	
								 <canvas id="myChartp" style="width:100%"></canvas>
                                 <button onClick="timeFramep('day')" >Day</button>
                                  <button onclick="timeFramep('month')">Month</button>
                                    <button onclick="timeFramep('year')" >Year</button>
                                   <input onchange="filterDatap()" type="date" id="startdatep" value="">
                                   <input onchange="filterDatap()" type="date" id="enddatep" value="">     
							</div>
						</div>
					</div>
		        </div>


            </div>
            
        </div>
		
    </div>
     <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

      <script myvar={{graphDataPatient}}>
              
          var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var temp = document.currentScript.getAttribute('myvar'); 
          var arr2=temp.split(","); // spliting from iso date to normal date
         var datapoints=[];
          var curr=1;
         for(var i=1;i<arr2.length;i++){ //counting occurance of each element
            if(arr2[i-1]===arr2[i]){
              ++curr;
            }else{
              datapoints.push(curr);
              curr=1;
            }
         }
          datapoints.push(curr);
          arr2=unique(arr2);
          const dayp=[];
          for(var i=0;i<arr2.length;i++){
             dayp.push({x:Date.parse(arr2[i]),y:datapoints[i]});
          }
          var data = {
            labels: arr2,
            datasets: [{
              label: 'Patients',
              data: dayp,
              backgroundColor: "lightgreen",
              borderColor: "green",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'day'
                  }
                },
                y: {
                  beginAtZero: true,
                   ticks: {
                    precision: 0
                }
                }
              }
            }
          };
          const myChartp = new Chart(
            document.getElementById('myChartp'),
            config
          );

          function timeFramep(period){

            if(period=='day'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=dayp;
            }else if(period=='month'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=dayp;
            }else if(period=='year'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=dayp;
            }
            myChartp.update();
          }

          function filterDatap(){
            var dates2=[...arr2];
            const startdate=document.getElementById('startdatep');
            const enddate=document.getElementById('enddatep');
           var indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
          
          var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChartp.config.data.labels=filterDate;
            var datapoints2=[...datapoints]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChartp.config.data.datasets[0].data=filterDatapoints;

            myChartp.update();
       
          }
        </script>
			
    {{>footer}}