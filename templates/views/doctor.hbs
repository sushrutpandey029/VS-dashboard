{{>header loginuser=loginuser}}
{{>sidebar loginuser=loginuser}}

        <div class="page-wrapper">
            <div class="content">
                <div class="row">
                    <div class="col-sm-4 col-3"> 
                        <h4 class="page-title">Doctors</h4>
                    </div>
                    <div class="col-sm-8 col-9 text-right m-b-20">
                        <a href="add-doctor" class="btn btn-primary btn-rounded float-right"><i class="fa fa-plus"></i> Add Doctor</a>
                    </div>
                </div>

               <div class="row doctor-grid">
                    {{#each userData}}
                    <div class="col-md-4 col-sm-4  col-lg-3">
                        <div class="profile-widget"> 
                            <div class="doctor-img">
                                <a class="avatar" href="/doc_detail_profile/{{this._id}}"><img alt="" src="img/doctor-thumb-03.jpg"></a>
                            </div>
                            <div class="dropdown profile-action">
                                <a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
                                <div class="dropdown-menu dropdown-menu-right">
                                  <a class="dropdown-item" href="./edit-doctor/{{this._id}}"><i class="fa fa-pencil m-r-5"></i> Edit</a>
                                  <a class="dropdown-item" href="/delete-doctor/{{this._id}}" data-toggle="modal"><i class="fa fa-trash-o m-r-5"></i> Delete</a>
                                  <a class="dropdown-item" href="/doc-dashboard/{{this._id}}"><i class="fa fa-pencil m-r-5"></i> Dashboard</a>
                                   <a class="dropdown-item" href="./docchange-password/{{this._id}}"><i class="fa fa-pencil m-r-5"></i>change-password</a>
                                </div>
                            </div>
                            <h4 class="doctor-name text-ellipsis"><a href="/doc-profile/{{this._id}}"></a>{{this.fullname}} {{this.lastfullname}}</h4>
                            <div class="doc-prof">{{this.email}}</div>
                            <div class="user-country">
                                <i class="fa fa-map-marker"></i> {{this.Country}}, {{this.City}}
                            </div>
                        </div>
                    </div>
                    {{/each}}

                    
                </div>

          <div class="row">
					<div class="col-12">
					<div class="col-12">
						<div class="card">
							<div class="card-body">
								<div class="chart-title">
									<center><b><h4>Doctors graph</h4></b></center>
								
								</div>	
								   <canvas id="pmyChart" style="width:100%"></canvas>
               <button onClick="timeFrame('day')" >Day</button>
              <button onclick="timeFrame('month')">Month</button>
              <button onclick="timeFrame('year')" >Year</button>
              <input onchange="filterData()" type="date" id="startdate" value="">
               <input onchange="filterData()" type="date" id="enddate" value="">     
               <select id='date-dropdown'></select>
              </div>
						</div>
					</div>
				</div>
                <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

 <script>
  let dateDropdown = document.getElementById('date-dropdown'); 
       
  let currentYear = new Date().getFullYear();    
  let earliestYear = 2020;     
  while (currentYear >= earliestYear) {      
    let dateOption = document.createElement('option');          
    dateOption.text = currentYear;      
    dateOption.value = currentYear;        
    dateDropdown.add(dateOption);      
    currentYear -= 1;    
  }
</script> 


  <script  myvar={{graphDataDoc}}>

          var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var tempd = document.currentScript.getAttribute('myvar'); 
          var arrd=tempd.split(","); // spliting from iso date to normal date
          var YEAR=document.getElementById('date-dropdown');
          var datapointsd=[];
          var yAxis=new Array(12).fill(0);
          var xAxis = ["January", "February", "March", "April", "May", "June", 
              "July","August", "September", "October","November", "December"]
              
          var curr=1;
         for(var i=1;i<arrd.length;i++){ //counting occurance of each element
            if(arrd[i-1]===arrd[i]){
              ++curr;
            }else{
              datapointsd.push(curr);
              curr=1;
            }
         }
         const counts = {};
         for (const num of arrd) {
                counts[num] = counts[num] ? counts[num] + 1 : 1;
              }
              // console.log(counts)
          datapointsd.push(curr);
          arr1=unique(arrd);
          var dayd=[];
          var mpo=new Map();

          for(var i=0;i<arrd.length;i++){
                  let date=new Date(arrd[i]);
                  let month = date.getMonth();
                let year = date.getFullYear().toString();
                if(year==YEAR.value){
                  yAxis[month]++;
                }
              }

          for(var i=0;i<arrd.length;i++){           
             mpo[arrd[i]]=mpo[arrd[i]] || [];
             mpo.set(arrd[i],datapointsd[i]);
          }
        for(var i=0;i<12;i++){
          dayd.push({x:xAxis[i],y:yAxis[i]});
        }
          
          var data = {
            labels: xAxis,
            datasets: [{
              label: 'Doctors',
              data: dayd,
              backgroundColor: "skyblue",
              borderColor: "blue",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data:data,
            options: {
              responsive: true,
              scales: {
                x:{
                  type: 'category',
                  time:{
                    unit: 'month'
                  }
                },
                y: {
                  beginAtZero: true,
                  ticks: {
                    precision: 0,
                }
                }
              },
            }
          };
          const myChart = new Chart(
            document.getElementById('pmyChart'),
            config
          );

          function timeFrame(period){
            if(period=='day'){
            var startdate=document.getElementById('startdate');
            var enddate=document.getElementById('enddate');
            var temp = new Date(startdate.value)
            enddate = new Date(enddate.value)
            
              var label = []
              while (temp <= enddate) {
                let day = temp.getDate();
                let month = temp.getMonth()+1;
                let year = temp.getFullYear();
                if(day<=9){
                 day= day.toString().padStart(2, '0');
                } if(month<=9){
                  month=month.toString().padStart(2,'0');
                }
                  label.push(year + "-" + month + "-" + day)
                  temp = new Date(temp.getTime() + 24 * 60 * 60 * 1000)
              }
              var dayn=[];
            for(var i=0;i<label.length;i++){
              if(mpo.has(label[i])){
                dayn.push({x:Date.parse(label[i]),y:counts[label[i]]}) 
              }else{
                dayn.push({x:Date.parse(label[i]),y:0});
              }
              }
                
              console.log("dayn ",dayn) 
              myChart.config.options.scales.x.time.unit=period;
              myChart.config.options.scales.x.type="category";
              myChart.config.data.labels=label; 
              myChart.config.data.datasets[0].data=dayn;

            }else if(period=='month'){
              var selectYear=document.getElementById('date-dropdown');
              
              var label = ["January", "February", "March", "April", "May", "June", 
              "July","August", "September", "October","November", "December"]
              
              var data=new Array(12).fill(0);

              for(var i=0;i<arrd.length;i++){
                  let date=new Date(arrd[i]);
                  let month = date.getMonth();
                let year = date.getFullYear().toString();
                if(year==selectYear.value){
                  data[month]++;
                }
              }
              var dayn=[];
              for(let i=0;i<12;i++){
                dayn.push({x:label[i],y:data[i]});
              }

              myChart.config.options.scales.x.time.unit=period;
              myChart.config.options.scales.x.type="category";
              myChart.config.data.labels=label; 
              myChart.config.data.datasets[0].data=dayn;
             
            }else if(period=='year'){
              var startdate=document.getElementById('startdate');
              var enddate=document.getElementById('enddate');
              startdate = new Date(startdate.value)
              enddate = new Date(enddate.value)
              
              var syear=startdate.getFullYear();
              var eyear=enddate.getFullYear();

              var dif=eyear-syear+1;
              var data=new Array(dif).fill(0);

              var label = []
              for(var i=syear;i<=eyear;i++){
                label.push(i);
              }
              for(var i=0;i<arrd.length;i++){
                let date=new Date(arrd[i]);
                let temp=date.getFullYear();
                data[temp-syear]++;
              }
              var dayn=[];
              for(var i=0;i<label.length;i++){
                dayn.push({x:label[i],y:data[i]});
              }
              myChart.config.options.scales.x.time.unit=period;
              myChart.config.options.scales.x.type="category";
              myChart.config.data.labels=label; 
              myChart.config.data.datasets[0].data=dayn;
            }
            myChart.update();
          }

          function filterData(){
            var dates2=[...arrd];
            const startdate=document.getElementById('startdate');
            const enddate=document.getElementById('enddate');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
           var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChart.config.data.labels=filterDate;
            var datapoints2=[...datapointsd]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChart.config.data.datasets[0].data=filterDatapoints;

            myChart.update();
       
          }

          </script>




        
               {{!-- <script  myvar={{graphDataDoc}}>

          var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var temp = document.currentScript.getAttribute('myvar'); 
          var arr2=temp.split(","); // spliting from iso date to normal date
         var datapoints=[];
          var curr=1;
         for(var i=1;i<arr2.length;i++){ //counting occurance of each element
            if(arr2[i-1]===arr2[i]){
              ++curr;
            }else{
              datapoints.push(curr);
              curr=1;
            }
         } 
          datapoints.push(curr);
          arr2=unique(arr2);
          var day=[];
          for(var i=0;i<arr2.length;i++){
             day.push({x:Date.parse(arr2[i]),y:datapoints[i]});
          }

          // console.log(day);
        
          var data = {
            labels: arr2,
            datasets: [{
              label: 'Doctors',
              data: day,
              backgroundColor: "skyblue",
              borderColor: "blue",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'month'
                  }
                },
                y: {
                  beginAtZero: true,
                   ticks: {
                    precision: 0
                }
                }
              }
            }
          };
          const myChart = new Chart(
            document.getElementById('myChart'),
            config
          );

          function timeFrame(period){
            if(period=='day'){
              myChart.config.options.scales.x.time.unit=period;
              myChart.config.data.datasets[0].data=day;
            }else if(period=='month'){
              myChart.config.options.scales.x.time.unit=period;
              myChart.config.data.datasets[0].data=day;
            }else if(period=='year'){
              myChart.config.options.scales.x.time.unit=period;
              myChart.config.data.datasets[0].data=day;
            }
            myChart.update();
          }

          function filterData(){
            var dates2=[...arr2];
            const startdate=document.getElementById('startdate');
            const enddate=document.getElementById('enddate');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
           var indexenddate=dates2.findIndex(function(date) {        
                      if(date==enddate.value){
                          return date;
                        }else if(date>enddate.value){
                          return date;
                        }
                        });
                        if(indexenddate==-1){
                          indexenddate=dates2.length-1;
                        }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChart.config.data.labels=filterDate;
            var datapoints2=[...datapoints]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChart.config.data.datasets[0].data=filterDatapoints;

            myChart.update();
       
          }

          </script>  --}}

				<div class="row">
                    <div class="col-sm-12">
                        <div class="see-all">
                            <a class="see-all-btn" href="javascript:void(0);">Load More</a>
                        </div>
                    </div>
                </div>
            </div>
           
        </div>
    </div>
    {{>footer}}